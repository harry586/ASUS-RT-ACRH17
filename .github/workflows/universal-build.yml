name: "Universal Firmware Builder"

on:
  workflow_dispatch:
    inputs:
      source_preset:
        description: '选择源码库'
        required: true
        type: choice
        options:
          - immortalwrt
          - openwrt
          - lede
        default: 'immortalwrt'
      
      source_branch:
        description: '源码分支 (auto=自动推荐)'
        required: true
        default: 'auto'
        type: string
        
      config_profile:
        description: '设备配置文件 (运行工作流查看可用选项)'
        required: true
        type: string
        default: '请先运行一次工作流查看可用配置文件'
      
      enable_custom_features:
        description: '启用自定义功能'
        required: false
        default: true
        type: boolean

env:
  TZ: "Asia/Shanghai"
  BUILD_TIMEOUT: 180

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: "📥 检出配置仓库"
      uses: actions/checkout@v4
      with:
        path: config-repo

    - name: "🔍 发现并显示可用配置文件"
      id: discover-configs
      run: |
        cd config-repo
        echo "=== 扫描配置文件 ==="
        
        # 查找所有配置文件
        CONFIG_FILES=$(find configs -name ".config_*" -type f 2>/dev/null | sort || echo "")
        
        if [ -z "$CONFIG_FILES" ]; then
          echo "❌ 错误: 未找到任何配置文件"
          echo "请在 config-repo/configs/ 目录下放置配置文件"
          echo "文件命名格式: .config_设备名_源码库"
          echo ""
          echo "示例:"
          echo "  .config_rt-ac42u_immortalwrt"
          echo "  .config_x86-64_openwrt"
          echo "  .config_rt-acrh17_lede"
          exit 1
        else
          echo "✅ 找到以下配置文件:"
          echo "$CONFIG_FILES"
          echo ""
          echo "⚠️  请复制上面的一个配置文件路径"
          echo "在工作流输入中粘贴到 '设备配置文件' 字段"
          echo ""
          
          # 保存配置文件列表（不使用 JSON 格式）
          echo "$CONFIG_FILES" > /tmp/available_configs.txt
        fi

    - name: "✅ 验证配置文件选择"
      run: |
        cd config-repo
        USER_CONFIG="${{ github.event.inputs.config_profile }}"
        
        # 检查是否是默认提示值
        if [ "$USER_CONFIG" = "请先运行一次工作流查看可用配置文件" ]; then
          echo "❌ 错误: 请在工作流输入中指定配置文件路径"
          echo ""
          echo "📋 可用配置文件列表:"
          cat /tmp/available_configs.txt || echo "未找到配置文件列表"
          echo ""
          echo "🔧 使用方法:"
          echo "1. 复制上面显示的一个配置文件路径"
          echo "2. 重新运行工作流"
          echo "3. 在 '设备配置文件' 字段中粘贴复制的路径"
          exit 1
        fi
        
        # 验证配置文件是否存在
        if [ ! -f "$USER_CONFIG" ]; then
          echo "❌ 错误: 配置文件不存在: $USER_CONFIG"
          echo ""
          echo "📋 可用配置文件列表:"
          cat /tmp/available_configs.txt || echo "未找到配置文件列表"
          exit 1
        fi
        
        echo "✅ 配置文件验证通过: $USER_CONFIG"

    - name: "🔧 解析源码配置"
      id: source-config
      run: |
        cd config-repo
        echo "读取源码库配置..."
        echo "选择的预设: ${{ github.event.inputs.source_preset }}"
        
        if [ ! -f "repositories.json" ]; then
          echo "❌ 错误: repositories.json 文件不存在"
          exit 1
        fi
        
        PRESET="${{ github.event.inputs.source_preset }}"
        
        # 从 repositories 对象中获取配置
        SOURCE_URL=$(jq -r ".repositories.$PRESET.url // empty" repositories.json)
        DESCRIPTION=$(jq -r ".repositories.$PRESET.description // empty" repositories.json)
        
        # 分支处理
        BRANCH="${{ github.event.inputs.source_branch }}"
        if [ "$BRANCH" = "auto" ]; then
          BRANCH=$(jq -r ".repositories.$PRESET.recommended_branch // \"main\"" repositories.json)
          echo "自动选择推荐分支: $BRANCH"
        fi
        
        # 验证获取的值
        if [ -z "$SOURCE_URL" ]; then
          echo "❌ 错误: 无法从repositories.json获取源码URL，请检查$PRESET配置"
          exit 1
        fi
        
        if [ -z "$BRANCH" ]; then
          echo "❌ 错误: 无法获取源码分支"
          exit 1
        fi
        
        echo "源码库: $PRESET - $DESCRIPTION"
        echo "仓库URL: $SOURCE_URL"
        echo "使用分支: $BRANCH"
        
        echo "SOURCE_URL=$SOURCE_URL" >> $GITHUB_ENV
        echo "SOURCE_BRANCH=$BRANCH" >> $GITHUB_ENV

    # ... 其余步骤保持不变 ...
