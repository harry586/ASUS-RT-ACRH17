name: "Universal Firmware Builder"

on:
  workflow_dispatch:
    inputs:
      source_preset:
        description: '选择源码库'
        required: true
        type: choice
        options:
          - immortalwrt
          - openwrt
          - lede
        default: 'immortalwrt'
      
      source_branch:
        description: '源码分支 (auto=自动推荐)'
        required: true
        default: 'auto'
        type: string
        
      config_profile:
        description: '设备配置文件路径 - 查看 firmware-config/configs-list.md'
        required: true
        type: string
        default: 'configs/.config_rt-ac42u_immortalwrt'
      
      enable_custom_features:
        description: '启用自定义功能'
        required: false
        default: true
        type: boolean

env:
  TZ: "Asia/Shanghai"
  BUILD_TIMEOUT: 180

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: "📥 检出配置仓库"
      uses: actions/checkout@v4
      with:
        path: .  # 直接检出到工作区根目录

    - name: "🔧 解析源码配置"
      id: source-config
      run: |
        echo "=== 详细文件检查 ==="
        echo "当前工作目录: $(pwd)"
        echo "目录内容:"
        ls -la
        echo ""
        
        echo "=== 检查firmware-config目录 ==="
        if [ -d "firmware-config" ]; then
          echo "✅ firmware-config 目录存在"
          echo "firmware-config 目录内容:"
          ls -la firmware-config/
          echo ""
          
          echo "=== 检查repositories.json文件 ==="
          if [ -f "firmware-config/repositories.json" ]; then
            echo "✅ repositories.json 文件存在"
            echo "文件详细信息:"
            ls -la firmware-config/repositories.json
            echo "文件大小: $(wc -c < firmware-config/repositories.json) 字节"
            echo ""
            
            echo "=== 验证JSON格式 ==="
            if jq empty firmware-config/repositories.json 2>/dev/null; then
              echo "✅ JSON格式验证通过"
            else
              echo "❌ JSON格式错误"
              exit 1
            fi
          else
            echo "❌ repositories.json 文件不存在"
            echo "当前目录下的所有JSON文件:"
            find . -name "*.json" -type f | head -10
            exit 1
          fi
        else
          echo "❌ firmware-config 目录不存在"
          echo "当前目录下的所有目录:"
          find . -maxdepth 1 -type d | head -10
          exit 1
        fi
        
        echo "=== 开始解析配置 ==="
        PRESET="${{ github.event.inputs.source_preset }}"
        
        SOURCE_URL=$(jq -r ".repositories.$PRESET.url // empty" firmware-config/repositories.json)
        DESCRIPTION=$(jq -r ".repositories.$PRESET.description // empty" firmware-config/repositories.json)
        
        BRANCH="${{ github.event.inputs.source_branch }}"
        if [ "$BRANCH" = "auto" ]; then
          BRANCH=$(jq -r ".repositories.$PRESET.recommended_branch // \"main\"" firmware-config/repositories.json)
          echo "自动选择推荐分支: $BRANCH"
        fi
        
        if [ -z "$SOURCE_URL" ]; then
          echo "❌ 错误: 无法从repositories.json获取源码URL"
          exit 1
        fi
        
        if [ -z "$BRANCH" ]; then
          echo "❌ 错误: 无法获取源码分支"
          exit 1
        fi
        
        echo "✅ 源码库: $PRESET - $DESCRIPTION"
        echo "✅ 仓库URL: $SOURCE_URL"
        echo "✅ 使用分支: $BRANCH"
        
        echo "SOURCE_URL=$SOURCE_URL" >> $GITHUB_ENV
        echo "SOURCE_BRANCH=$BRANCH" >> $GITHUB_ENV

    # ... 其余步骤保持不变 ...
